{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce7116100b4578063a22cb46511610083578063a22cb465146103c1578063b88d4fde146103fc578063c87b56dd146104cf578063e985e9c5146104ec5761011d565b80634f6ccce71461034c5780636352211e1461036957806370a082311461038657806395d89b41146103b95761011d565b806318160ddd116100f057806318160ddd1461027357806323b872dd1461028d5780632f745c59146102d057806342842e0e146103095761011d565b806301ffc9a71461012257806306fdde0314610175578063081812fc146101f2578063095ea7b314610238575b600080fd5b6101616004803603602081101561013857600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610527565b604080519115158252519081900360200190f35b61017d61055e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b757818101518382015260200161019f565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020f6004803603602081101561020857600080fd5b50356105f5565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102716004803603604081101561024e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610634565b005b61027b610711565b60408051918252519081900360200190f35b610271600480360360608110156102a357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610717565b61027b600480360360408110156102e657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561073c565b6102716004803603606081101561031f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610796565b61027b6004803603602081101561036257600080fd5b50356107b2565b61020f6004803603602081101561037f57600080fd5b50356107e7565b61027b6004803603602081101561039c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661081e565b61017d610870565b610271600480360360408110156103d757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013515156108d1565b6102716004803603608081101561041257600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561045a57600080fd5b82018360208201111561046c57600080fd5b8035906020019184600183028401116401000000008311171561048e57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061098d945050505050565b61017d600480360360208110156104e557600080fd5b50356109b5565b6101616004803603604081101561050257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610a6a565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b505050505090505b90565b600061060082610aa5565b151561060b57600080fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061063f826107e7565b905073ffffffffffffffffffffffffffffffffffffffff838116908216141561066757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061069057506106908133610a6a565b151561069b57600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6107213382610acf565b151561072c57600080fd5b610737838383610b62565b505050565b60006107478361081e565b821061075257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020526040902080548390811061078357fe5b9060005260206000200154905092915050565b610737838383602060405190810160405280600081525061098d565b60006107bc610711565b82106107c757600080fd5b60078054839081106107d557fe5b90600052602060002001549050919050565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff1680151561081857600080fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff8216151561084257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902061081890610b81565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105ea5780601f106105bf576101008083540402835291602001916105ea565b73ffffffffffffffffffffffffffffffffffffffff82163314156108f457600080fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610998848484610717565b6109a484848484610b85565b15156109af57600080fd5b50505050565b60606109c082610aa5565b15156109cb57600080fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610a5e5780601f10610a3357610100808354040283529160200191610a5e565b820191906000526020600020905b815481529060010190602001808311610a4157829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b600080610adb836107e7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b4a57508373ffffffffffffffffffffffffffffffffffffffff16610b32846105f5565b73ffffffffffffffffffffffffffffffffffffffff16145b80610b5a5750610b5a8185610a6a565b949350505050565b610b6d838383610d1e565b610b778382610e5b565b6107378282610f93565b5490565b6000610ba68473ffffffffffffffffffffffffffffffffffffffff16610fde565b1515610bb457506001610b5a565b6040517f150b7a02000000000000000000000000000000000000000000000000000000008152336004820181815273ffffffffffffffffffffffffffffffffffffffff888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610c54578181015183820152602001610c3c565b50505050905090810190601f168015610c815780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610ca357600080fd5b505af1158015610cb7573d6000803e3d6000fd5b505050506040513d6020811015610ccd57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610d3e826107e7565b73ffffffffffffffffffffffffffffffffffffffff1614610d5e57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82161515610d8057600080fd5b610d8981610fe6565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020610db79061103d565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610de590611054565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040812054610e9290600163ffffffff61105d16565b600083815260066020526040902054909150808214610f565773ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260408120805484908110610edc57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515610f3657fe5b600091825260208083209091019290925591825260069052604090208190555b73ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260409020805490610f8c906000198301611072565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6000903b1190565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff161561103a576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b805461105090600163ffffffff61105d16565b9055565b80546001019055565b60008282111561106c57600080fd5b50900390565b815481835581811115610737576000838152602090206107379181019083016105f291905b808211156110ab5760008155600101611097565b509056fea165627a7a7230582033b7ebd1b814a81cd56b0038e522b1e5bb1eb4b90ced97395142f0e2a94756df0029",
  "sourceMap": "382:227:11:-;;;452:155;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:155:11;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;452:155:11;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;452:155:11;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;452:155:11;;-1:-1:-1;529:4:11;;-1:-1:-1;452:155:11;;-1:-1:-1;639:40:5;;-1:-1:-1;658:20:5;639:18;;;;:40;:::i;:::-;1970::9;1989:20;1970:18;;;;:40;:::i;:::-;1227:51:10;1246:31;1227:18;;;;:51;:::i;:::-;737:12:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;759:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;863:49:12;882:29;863:18;;;;:49;:::i;:::-;665:254;;452:155:11;;382:227;;989:158:5;1064:25;;;;;;1056:34;;;;;;1100:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1100:40:5;1136:4;1100:40;;;989:158::o;382:227:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;382:227:11;;;-1:-1:-1;382:227:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "382:227:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;382:227:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:133:5;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1023:83:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1023:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3773:151:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3773:151:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;3196:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3196:292:9;;;;;;;;;:::i;:::-;;1992:94:10;;;:::i;:::-;;;;;;;;;;;;;;;;5329:180:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5329:180:9;;;;;;;;;;;;;;;;;;:::i;1658:182:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1658:182:10;;;;;;;;;:::i;6142:132:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6142:132:9;;;;;;;;;;;;;;;;;;:::i;2423:148:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2423:148:10;;:::i;2598:177:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2598:177:9;;:::i;2220:160::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2220:160:9;;;;:::i;1214:87:12:-;;;:::i;4216:213:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4216:213:9;;;;;;;;;;;:::i;6979:211::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6979:211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6979:211:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6979:211:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6979:211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6979:211:9;;-1:-1:-1;6979:211:9;;-1:-1:-1;;;;;6979:211:9:i;1500:151:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1500:151:12;;:::i;4750:145:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4750:145:9;;;;;;;;;;;:::i;777:133:5:-;870:33;;847:4;870:33;;;;;;;;;;;;;;777:133::o;1023:83:12:-;1094:5;1087:12;;;;;;;;-1:-1:-1;;1087:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:13;;1087:12;;1094:5;;1087:12;;1094:5;1087:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:83;;:::o;3773:151:9:-;3832:7;3859:16;3867:7;3859;:16::i;:::-;3851:25;;;;;;;;-1:-1:-1;3893:24:9;;;;:15;:24;;;;;;;;;3773:151::o;3196:292::-;3259:13;3275:16;3283:7;3275;:16::i;:::-;3259:32;-1:-1:-1;3309:11:9;;;;;;;;;3301:20;;;;;;3339:10;:19;;;;;:58;;;3362:35;3379:5;3386:10;3362:16;:35::i;:::-;3331:67;;;;;;;;3409:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3409:29:9;;;;;;;;;;;3453:28;;3409:24;;3453:28;;;;;;;3196:292;;;:::o;1992:94:10:-;2062:10;:17;1992:94;:::o;5329:180:9:-;5419:39;5438:10;5450:7;5419:18;:39::i;:::-;5411:48;;;;;;;;5470:32;5484:4;5490:2;5494:7;5470:13;:32::i;:::-;5329:180;;;:::o;1658:182:10:-;1738:7;1773:16;1783:5;1773:9;:16::i;:::-;1765:24;;1757:33;;;;;;1807:19;;;;;;;:12;:19;;;;;:26;;1827:5;;1807:26;;;;;;;;;;;;;;1800:33;;1658:182;;;;:::o;6142:132:9:-;6228:39;6245:4;6251:2;6255:7;6228:39;;;;;;;;;;;;;:16;:39::i;2423:148:10:-;2481:7;2516:13;:11;:13::i;:::-;2508:21;;2500:30;;;;;;2547:10;:17;;2558:5;;2547:17;;;;;;;;;;;;;;2540:24;;2423:148;;;:::o;2598:177:9:-;2653:7;2688:20;;;:11;:20;;;;;;;;2726:19;;;2718:28;;;;;;2763:5;2598:177;-1:-1:-1;;2598:177:9:o;2220:160::-;2275:7;2302:19;;;;;2294:28;;;;;;2339:24;;;;;;;:17;:24;;;;;:34;;:32;:34::i;1214:87:12:-;1287:7;1280:14;;;;;;;;-1:-1:-1;;1280:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:13;;1280:14;;1287:7;;1280:14;;1287:7;1280:14;;;;;;;;;;;;;;;;;;;;;;;;4216:213:9;4295:16;;;4301:10;4295:16;;4287:25;;;;;;4341:10;4322:30;;;;:18;:30;;;;;;;;;:34;;;;;;;;;;;;:45;;;;;;;;;;;;;4382:40;;;;;;;4322:34;;4341:10;4382:40;;;;;;;;;;;4216:213;;:::o;6979:211::-;7085:31;7098:4;7104:2;7108:7;7085:12;:31::i;:::-;7134:48;7157:4;7163:2;7167:7;7176:5;7134:22;:48::i;:::-;7126:57;;;;;;;;6979:211;;;;:::o;1500:151:12:-;1558:13;1591:16;1599:7;1591;:16::i;:::-;1583:25;;;;;;;;1625:19;;;;:10;:19;;;;;;;;;1618:26;;;;;;-1:-1:-1;;1618:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:19;;1618:26;;1625:19;1618:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:151;;;:::o;4750:145:9:-;4853:25;;;;4830:4;4853:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4750:145::o;7384:152::-;7441:4;7473:20;;;:11;:20;;;;;;;;7510:19;;;7384:152::o;7896:246::-;7981:4;7997:13;8013:16;8021:7;8013;:16::i;:::-;7997:32;;8058:5;8047:16;;:7;:16;;;:51;;;;8091:7;8067:31;;:20;8079:7;8067:11;:20::i;:::-;:31;;;8047:51;:87;;;;8102:32;8119:5;8126:7;8102:16;:32::i;:::-;8039:96;7896:246;-1:-1:-1;;;;7896:246:9:o;2946:239:10:-;3031:38;3051:4;3057:2;3061:7;3031:19;:38::i;:::-;3080:47;3113:4;3119:7;3080:32;:47::i;:::-;3138:40;3166:2;3170:7;3138:27;:40::i;1062:112:4:-;1153:14;;1062:112::o;10734:347:9:-;10855:4;10880:15;:2;:13;;;:15::i;:::-;10879:16;10875:58;;;-1:-1:-1;10918:4:9;10911:11;;10875:58;10959:70;;;;;10996:10;10959:70;;;;;;:36;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;10943:13;;10959:36;;;;;;10996:10;;11008:4;;11014:7;;11023:5;;10959:70;;;;;;;;;;;10943:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10959:70:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10959:70:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10959:70:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10959:70:9;11047:26;;11057:16;11047:26;;-1:-1:-1;;10734:347:9;;;;;;:::o;9844:362::-;9957:4;9937:24;;:16;9945:7;9937;:16::i;:::-;:24;;;9929:33;;;;;;9980:16;;;;;9972:25;;;;;;10008:23;10023:7;10008:14;:23::i;:::-;10042;;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;10087:21;;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10131:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;10131:25:9;;;;;;;;;;;10172:27;;10131:20;;10172:27;;;;;;;9844:362;;;:::o;6048:1128:10:-;6335:18;;;6310:22;6335:18;;;:12;:18;;;;;:25;:32;;6365:1;6335:32;:29;:32;:::i;:::-;6377:18;6398:26;;;:17;:26;;;;;;6310:57;;-1:-1:-1;6528:28:10;;;6524:323;;6594:18;;;6572:19;6594:18;;;:12;:18;;;;;:34;;6613:14;;6594:34;;;;;;;;;;;;;;6572:56;;6676:11;6643:12;:18;6656:4;6643:18;;;;;;;;;;;;;;;6662:10;6643:30;;;;;;;;;;;;;;;;;;;;;:44;;;;6759:30;;;:17;:30;;;;;:43;;;6524:323;6933:18;;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6933:27:10;;;:::i;:::-;;6048:1128;;;;:::o;4894:183::-;5007:16;;;;;;;;:12;:16;;;;;;;;:23;;4978:26;;;:17;:26;;;;;:52;;;5040:16;;;39:1:-1;23:18;;45:23;;5040:30:10;;;;;;;;4894:183::o;463:616:17:-;523:4;1026:20;;1064:8;;463:616::o;11242:171:9:-;11341:1;11305:24;;;:15;:24;;;;;;:38;:24;:38;11301:106;;11394:1;11359:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11359:37:9;;;11301:106;11242:171;:::o;1275:108:4:-;1355:14;;:21;;1374:1;1355:21;:18;:21;:::i;:::-;1338:38;;1275:108::o;1180:89::-;1243:19;;1261:1;1243:19;;;1180:89::o;1211:145:7:-;1269:7;1296:6;;;;1288:15;;;;;;-1:-1:-1;1325:5:7;;;1211:145::o;382:227:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.2;\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology\n * @dev see https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n",
  "sourcePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1549
      ]
    },
    "id": 1550,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1527,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1528,
        "nodeType": "ImportDirective",
        "scope": 1550,
        "sourceUnit": 1191,
        "src": "25:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1529,
        "nodeType": "ImportDirective",
        "scope": 1550,
        "sourceUnit": 1526,
        "src": "48:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1530,
        "nodeType": "ImportDirective",
        "scope": 1550,
        "sourceUnit": 1677,
        "src": "81:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1531,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1190,
              "src": "405:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1190",
                "typeString": "contract ERC721"
              }
            },
            "id": 1532,
            "nodeType": "InheritanceSpecifier",
            "src": "405:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1533,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1525,
              "src": "413:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1525",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1534,
            "nodeType": "InheritanceSpecifier",
            "src": "413:16:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1535,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1676,
              "src": "431:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1676",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1536,
            "nodeType": "InheritanceSpecifier",
            "src": "431:14:11"
          }
        ],
        "contractDependencies": [
          398,
          408,
          1190,
          1525,
          1676,
          1779,
          1806,
          1829
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 1549,
        "linearizedBaseContracts": [
          1549,
          1676,
          1829,
          1525,
          1806,
          1190,
          1779,
          398,
          408
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1547,
              "nodeType": "Block",
              "src": "543:64:11",
              "statements": []
            },
            "documentation": null,
            "id": 1548,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1543,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1538,
                    "src": "529:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1544,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1540,
                    "src": "535:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1542,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1676,
                  "src": "514:14:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1676_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "514:28:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "465:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1540,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "485:20:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "464:42:11"
            },
            "returnParameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:0:11"
            },
            "scope": 1549,
            "src": "452:155:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1550,
        "src": "382:227:11"
      }
    ],
    "src": "0:610:11"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1549
      ]
    },
    "id": 1550,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1527,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1528,
        "nodeType": "ImportDirective",
        "scope": 1550,
        "sourceUnit": 1191,
        "src": "25:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1529,
        "nodeType": "ImportDirective",
        "scope": 1550,
        "sourceUnit": 1526,
        "src": "48:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1530,
        "nodeType": "ImportDirective",
        "scope": 1550,
        "sourceUnit": 1677,
        "src": "81:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1531,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1190,
              "src": "405:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1190",
                "typeString": "contract ERC721"
              }
            },
            "id": 1532,
            "nodeType": "InheritanceSpecifier",
            "src": "405:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1533,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1525,
              "src": "413:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1525",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1534,
            "nodeType": "InheritanceSpecifier",
            "src": "413:16:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1535,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1676,
              "src": "431:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1676",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1536,
            "nodeType": "InheritanceSpecifier",
            "src": "431:14:11"
          }
        ],
        "contractDependencies": [
          398,
          408,
          1190,
          1525,
          1676,
          1779,
          1806,
          1829
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 1549,
        "linearizedBaseContracts": [
          1549,
          1676,
          1829,
          1525,
          1806,
          1190,
          1779,
          398,
          408
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1547,
              "nodeType": "Block",
              "src": "543:64:11",
              "statements": []
            },
            "documentation": null,
            "id": 1548,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1543,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1538,
                    "src": "529:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1544,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1540,
                    "src": "535:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1542,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1676,
                  "src": "514:14:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1676_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "514:28:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "465:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1540,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "485:20:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "464:42:11"
            },
            "returnParameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:0:11"
            },
            "scope": 1549,
            "src": "452:155:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1550,
        "src": "382:227:11"
      }
    ],
    "src": "0:610:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-03-26T17:42:59.303Z",
  "devdoc": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology"
  },
  "userdoc": {
    "methods": {}
  }
}